!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	libraries/Ctuple/tuple.h	/^    void *A;$/;"	m	struct:Tuple
ASSEMBLY_H	src/assembly.h	2;"	d
B	libraries/Ctuple/tuple.h	/^    void *B;$/;"	m	struct:Tuple
EQ	src/assembly.h	6;"	d
GAME_H	src/game.h	2;"	d
GT	src/assembly.h	4;"	d
LIST_H	libraries/Clist/list.h	2;"	d
LT	src/assembly.h	5;"	d
OWNER_P1	src/game.h	8;"	d
OWNER_P2	src/game.h	9;"	d
PC	src/game.h	/^static unsigned PC;$/;"	v
RAM	src/game.h	/^struct ram *RAM;$/;"	v	typeref:struct:ram
RAM_H	src/ram.h	2;"	d
RAM_SIZE	src/game.h	4;"	d
REG_SIZE	src/game.h	5;"	d
STDIO_H	libraries/stringlibC/string.c	2;"	d	file:
STDLIB_H	libraries/Clist/list.c	3;"	d	file:
STDLIB_H	libraries/Ctuple/tuple.c	3;"	d	file:
STDLIB_H	libraries/stringlibC/string.c	7;"	d	file:
STDLIB_H	src/assembly.c	3;"	d	file:
STDLIB_H	src/game.c	2;"	d	file:
STDLIB_H	src/ram.c	6;"	d	file:
STRING_H	libraries/stringlibC/string.h	2;"	d
TUPLE_H	libraries/Ctuple/tuple.h	2;"	d
Tuple	libraries/Ctuple/tuple.h	/^struct Tuple{$/;"	s
Tuple_first	libraries/Ctuple/tuple.c	/^Tuple_first(struct Tuple *t)$/;"	f
Tuple_free	libraries/Ctuple/tuple.c	/^Tuple_free(struct Tuple *current)$/;"	f
Tuple_new	libraries/Ctuple/tuple.c	/^Tuple_new(void *a, void*b){$/;"	f
Tuple_second	libraries/Ctuple/tuple.c	/^Tuple_second(struct Tuple *t)$/;"	f
_concatString	libraries/stringlibC/string.c	/^void _concatString(struct _string *this, struct _string *other){\/\/appends$/;"	f
_deleteString	libraries/stringlibC/string.c	/^void _deleteString(struct _string *this){$/;"	f
_equalsString	libraries/stringlibC/string.c	/^int _equalsString(struct _string *this, struct _string *other){$/;"	f
_findString	libraries/stringlibC/string.c	/^_findString(struct _string *this, struct _string *other)$/;"	f
_getCharString	libraries/stringlibC/string.c	/^char *_getCharString(struct _string *this){$/;"	f
_getSizeString	libraries/stringlibC/string.c	/^int _getSizeString(struct _string *this){$/;"	f
_getStringIter	libraries/stringlibC/string.c	/^stringIter *_getStringIter(string *this){$/;"	f
_indexAt	libraries/stringlibC/string.c	/^char _indexAt(struct _string *this, int index){$/;"	f
_printString	libraries/stringlibC/string.c	/^void _printString(struct _string *this){$/;"	f
_setString	libraries/stringlibC/string.c	/^void _setString(struct _string *this, char *_info){$/;"	f
_string	libraries/stringlibC/string.h	/^typedef struct _string{$/;"	s
_stringIter	libraries/stringlibC/string.h	/^typedef struct _stringIter{$/;"	s
_stringIterNext	libraries/stringlibC/string.c	/^char _stringIterNext(struct _stringIter *this){$/;"	f
_subnstr	libraries/stringlibC/string.c	/^struct _string *_subnstr(struct _string *this, int start, int end){ $/;"	f
_substr	libraries/stringlibC/string.c	/^struct _string *_substr(struct _string *this, int end){ \/\/substr starting at 0$/;"	f
addItemSpace	libraries/stringlibC/string.c	/^addItemSpace(void *lst, int numElems)$/;"	f
begin	libraries/stringlibC/string.h	/^	stringIter (*begin)(struct _string *);$/;"	m	struct:_string
bgt	src/assembly.c	/^bgt(unsigned dest)$/;"	f
blt	src/assembly.c	/^blt(unsigned dest)$/;"	f
bun	src/assembly.c	/^bun (unsigned dest, unsigned source)$/;"	f
charCopy	libraries/stringlibC/string.c	/^void charCopy(char *dest, char *src, int n){$/;"	f
charnCopy	libraries/stringlibC/string.c	/^void charnCopy(char *dest, char *src, int start, int n){$/;"	f
cmp	src/assembly.c	/^cmp (unsigned cmp1, unsigned cmp2)$/;"	f
concat	libraries/stringlibC/string.h	/^	void (*concat)(struct _string *,struct _string *);$/;"	m	struct:_string
data	libraries/Clist/list.h	/^    void **data;$/;"	m	struct:list
data	src/ram.h	/^    unsigned data;$/;"	m	struct:ramblock
equals	libraries/stringlibC/string.h	/^	int (*equals)(struct _string *, struct _string *);$/;"	m	struct:_string
err	src/game.h	/^static unsigned err:1;$/;"	v
false	src/game.h	7;"	d
find	libraries/stringlibC/string.h	/^	int (*find)(struct _string *, struct _string *);$/;"	m	struct:_string
findCharLocations	libraries/stringlibC/string.c	/^findCharLocations(struct _string *this, char c)$/;"	f
flag	src/game.h	/^static unsigned flag;$/;"	v
getRaw	libraries/stringlibC/string.h	/^	char *(*getRaw)(struct _string *);$/;"	m	struct:_string
getSize	libraries/stringlibC/string.h	/^	int (*getSize)(struct _string *);$/;"	m	struct:_string
index	libraries/Clist/list.h	/^    int index;$/;"	m	struct:list
index	libraries/stringlibC/string.h	/^	char (*index)(struct _string *, int);$/;"	m	struct:_string
list	libraries/Clist/list.h	/^struct list {$/;"	s
list_append	libraries/Clist/list.c	/^list_append(struct list *current, void *item)$/;"	f
list_check_mem	libraries/Clist/list.c	/^list_check_mem(struct list *current)$/;"	f
list_copy	libraries/Clist/list.c	/^list_copy(struct list *current, int leftPad)$/;"	f
list_get	libraries/Clist/list.c	/^list_get(struct list *current, int index)$/;"	f
list_new	libraries/Clist/list.c	/^list_new()$/;"	f
list_new_n	libraries/Clist/list.c	/^list_new_n(int size)$/;"	f
list_prepend	libraries/Clist/list.c	/^list_prepend(struct list *current, void *item)$/;"	f
main	libraries/stringlibC/string.c	/^int main(){$/;"	f
newString	libraries/stringlibC/string.c	/^struct _string * newString(){$/;"	f
newStringIter	libraries/stringlibC/string.h	/^struct _stringIter *newStringIter(char *rawString, int start, int step, int size){$/;"	f
newStringc	libraries/stringlibC/string.c	/^struct _string * newStringc(char *_set){$/;"	f
next	libraries/stringlibC/string.h	/^	char (*next)(struct _stringIter*);$/;"	m	struct:_stringIter
nextSize	libraries/Clist/list.h	/^    int nextSize;$/;"	m	struct:list
owner	src/ram.h	/^    unsigned owner;$/;"	m	struct:ramblock
paramreg	src/game.h	/^static unsigned paramreg;$/;"	v
print	libraries/stringlibC/string.h	/^	void (*print)(struct _string *);$/;"	m	struct:_string
ram	src/ram.h	/^struct ram {$/;"	s
ram_check	src/ram.c	/^ram_check(unsigned loc)$/;"	f
ram_get	src/ram.c	/^ram_get(struct ram *ramblock, unsigned loc){$/;"	f
ram_get_owner	src/ram.c	/^ram_get_owner(struct ram *ramblock, unsigned loc)$/;"	f
ram_initBloc	src/ram.c	/^ram_initBloc()$/;"	f
ram_set	src/ram.c	/^ram_set(struct ram *ramblock, unsigned loc, unsigned data)$/;"	f
ramblock	src/ram.h	/^struct ramblock {$/;"	s
ramdata	src/ram.h	/^    struct ramblock *ramdata;$/;"	m	struct:ram	typeref:struct:ram::ramblock
ramsize	src/game.h	/^static unsigned ramsize;$/;"	v
rawString	libraries/stringlibC/string.h	/^	char *rawString;$/;"	m	struct:_string
rawString	libraries/stringlibC/string.h	/^	char *rawString;$/;"	m	struct:_stringIter
reg	src/game.h	/^static unsigned reg[2][REG_SIZE];$/;"	v
reg_check	src/ram.c	/^reg_check(unsigned loc)$/;"	f
returnreg	src/game.h	/^static unsigned returnreg;$/;"	v
set	libraries/stringlibC/string.h	/^	void (*set)(struct _string *, char *);$/;"	m	struct:_string
size	libraries/Clist/list.h	/^    int size;$/;"	m	struct:list
size	libraries/stringlibC/string.h	/^	int size;$/;"	m	struct:_string
size	libraries/stringlibC/string.h	/^	int start, step, size;$/;"	m	struct:_stringIter
size	src/ram.h	/^    int size;$/;"	m	struct:ram
split	libraries/stringlibC/string.c	/^split(struct _string *this, char c)$/;"	f
start	libraries/Clist/list.h	/^    int start;$/;"	m	struct:list
start	libraries/stringlibC/string.h	/^	int start, step, size;$/;"	m	struct:_stringIter
step	libraries/stringlibC/string.h	/^	int start, step, size;$/;"	m	struct:_stringIter
string	libraries/stringlibC/string.h	/^} string;$/;"	t	typeref:struct:_string
stringIter	libraries/stringlibC/string.h	/^}stringIter;$/;"	t	typeref:struct:_stringIter
subnstr	libraries/stringlibC/string.h	/^	struct _string * (*subnstr)(struct _string *,int , int );$/;"	m	struct:_string	typeref:struct:_string::subnstr
substr	libraries/stringlibC/string.h	/^	struct _string * (*substr)(struct _string *, int );$/;"	m	struct:_string	typeref:struct:_string::substr
translate_opcode	src/game.c	/^(*translate_opcode()) (struct _string *opcode)$/;"	f
true	src/game.h	6;"	d
